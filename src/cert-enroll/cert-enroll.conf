#!/bin/bash
# Global configuration file for the strongSwan cert-enroll script 
#
# Copyright (C) 2023 Andreas Steffen
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# Minimum number of days when a new certificate will be requested
: ${MIN_DAYS=42}

# Interval in days for checking CA certificate changes
: ${CA_CHECK_INTERVAL=7}

# Some state variables
: ${ROOTCA_CHANGED=0}
: ${SUBCA_CHANGED=0}

# Directory where the certificates and keys will be stored 
: ${DIR=/root/certificates}

# Key and certificate names
: ${KEY=key.pem}
: ${REQ=req.pem}
: ${CERT=cert.pem}
: ${CAOUT=cacert}
: ${ROOTCA=$CAOUT.pem}
: ${SUBCA=$CAOUT-1.pem}
: ${RAOUT=racert}
: ${RACERT=$RAOUT.pem}

# TLS root CA certificate required by EST
# (might also be a Let's Encrypt or other third party root CA certificate)
: ${TLSROOTCA=$DIR/$ROOTCA}

# Private key type (either "ECDSA" or "RSA")
: ${TYPE=ECDSA}

# RSA private key size in bits
: ${RSA_SIZE=3072}

# ECDSA private key size in bits
: ${ECDSA_SIZE=256}

# Fully Qualified Domain Name and Distinguished Name
: ${FQDN=`hostname`}
: ${DN="C=CH, O=strongSwan Project, CN=$FQDN"}

# Subject Alternative Name (SAN)
: ${SAN1=--san $FQDN}

# Optional additional Subject Alternative Names (fill in and uncomment)
# : ${SAN2=--san }
# : ${SAN3=--san }
# : ${SAN4=--san }

# Certificate profile (one of "client", "server", "dual" or "ocsp")
: ${PROFILE=dual}

# Enrollment protocol (either "EST" or "SCEP")
: ${PROTOCOL=EST}

# Protocol for fetching CA certificates (either "EST" or "SCEP")
: ${CA_PROTOCOL=$PROTOCOL}

# URL of the EST enrollment server
: ${EST_URL=https://pki.strongswan.org}

# URL of the SCEP enrollment server
: ${SCEP_URL=http://pki.strongswan.org/scep}

# Maximum poll time in seconds for EST enrollment process
: ${EST_MAX_POLL_TIME=0}

# Maximum poll time in seconds for SCEP enrollment process
: ${SCEP_MAX_POLL_TIME=0}

